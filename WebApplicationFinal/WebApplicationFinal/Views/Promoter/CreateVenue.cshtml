@model EventPlanner.Models.CreateVenueViewModel
@{
    ViewBag.Title = "CreateVenue";
}

@using (Html.BeginForm("CreateVenue", "Promoter", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal" style="color:#ffffff;">
        <h4> Create Venue</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="row">
                <div class="col-md-10">
                    <label> Venue Name </label>
                </div>
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.CurrentVenue.Name, new { @class = "form=control" })
                    @Html.ValidationMessageFor(m => m.CurrentVenue.Name, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-group">
                <div class="col-md-10">
                    <label> Restrictions</label>
                </div>
                <div class="col-md-10">
                    <div class=" row">
                        @Html.CheckBoxFor(m => m.CurrentVenue.IsOutdoors, "False")
                        <label> Outdoors</label>
                    </div>
                    <div class=" row">
                        @Html.CheckBoxFor(m => m.CurrentVenue.IsDisabledFriendly, "False")
                        <label> People with Disabilities Friendly </label>
                    </div>
                    <div class=" row">
                        @Html.CheckBoxFor(m => m.CurrentVenue.HasSeating, "False")
                        <label> 18+ Only </label>
                    </div>
                </div>
            </div>
            @Html.HiddenFor(m => m.IdOfEvent)
            @Html.HiddenFor(m => m.CurrentVenue.Latitude, new { @id = "latitude"})
            @Html.HiddenFor(m => m.CurrentVenue.Longitude, new { @id = "longitude"})
            <div class="form-group">
                <div class="col-md-offset-2 col-md-5">
                    <input type="submit" value="Create Venue" class="btn btn-default" label="CreateVenue" />
                </div>
            </div>
        </div>
    </div>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@*<%@ Page Language="C#" AutoEventWireup="true" CodeFile="sample.aspx.cs" Inherits="sample" %>*@

<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
    <title>Show Google Map with Latitude and Longitude in asp.net website</title>
    <style type="text/css">
        html {
            height: 100%;
        }

        body {
            height: 100%;
            margin: 0;
            padding: 0;
            vertical-align: top
        }

        #map_canvas {
            height: 100%;
        }
    </style>
    <script type="text/javascript"
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC6v5-2uaq_wusHDktM9ILcqIrlPtnZgEk&sensor=false">
    </script>
    <script type="text/javascript">

        function initialize() {
            var myLatlng = new google.maps.LatLng(43.038902, -87.906471);
            var myOptions = {
                zoom: 7,
                center: myLatlng,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            }
            map = new google.maps.Map(document.getElementById("gmap"), myOptions);
            var marker
                = new google.maps.Marker({
                    map: map
                });
            google.maps.event.addListener(marker, 'dblclick', function () {
                zoomLevel = map.getZoom() + 1;
                if (zoomLevel == 20) {
                    zoomLevel = 10;
                }
                document.getElementById("zoom_level").innerHTML = zoomLevel;
                map.setZoom(zoomLevel);
            });
            function placeMarker(location) {
                if (marker) {
                    marker.setPosition(location);
                } else {
                    marker = new google.maps.Marker({
                        position: location,
                        map: map
                    });
                }
            }
            google.maps.event.addListener(map, 'click', function (event) {
                placeMarker(event.latLng);
            });
            var latlng = google.maps.event.addDomListener(map, 'click', function (event) {
                var lat = event.latLng.lat();
                var lng = event.latLng.lng();
                var latlng = [lat, lng];
                document.getElementById("latitude").value = lat;
                document.getElementById("longitude").value = lng;
                //alert("Latitude: " + event.latLng.lat() + " " + ", longitude: " + event.latLng.lng());
                return latlng;
                @*@Html.HiddenFor(m => m.CurrentVenue.Latitude, new { id = "Latitude", @value = latlng })*@

                // need to fix this

            });
                        
        }
        window.onload = function () { initialize() };
    </script>
    <style>
        div#gmap {
            width: 40%;
            height: 500px;
            border: double;
        }
    </style>
</head>

<body>
    <form id="form1" runat="server">
        <center>
            <!-- MAP HOLDER -->
            <div id="gmap"></div>


        </center>

    </form>
</body>

</html>
}